import fetch from 'cross-fetch';
import { HttpClient, HttpClientResponse } from '../types/http';

export interface FetchResponse {
  headers: Headers;
  ok: boolean;
  redirected: boolean;
  status: number;
  statusText: string;
  type: ResponseType;
  url: string;
}

export class HttpClientFetch implements HttpClient {
  options: RequestInit;

  constructor(options?: RequestInit) {
    const defaultOptions = {
      timeout: 240000,
    };
    const defaultHeaders = {
      'Content-Type': 'application/json',
      'x-nacelle-sdk-version': '__sdkVersion__',
    };
    const { headers, ...otherOptions } = options || {};

    this.options = {
      headers: {
        ...defaultHeaders,
        ...headers,
      },
      ...defaultOptions,
      ...otherOptions,
    };
  }

  async get<T>(url: string): Promise<HttpClientResponse<T>> {
    const response: Response = await fetch(url, {
      ...this.options,
      method: 'GET',
    });
    const data: T = await response.json();

    return {
      headers: response.headers,
      status: response.status,
      statusText: response.statusText,
      data,
    };
  }

  async post<T>(url: string, data: unknown): Promise<HttpClientResponse<T>> {
    const response: Response = await fetch(url, {
      ...this.options,
      method: 'POST',
      body: JSON.stringify(data),
    });
    const responseData: T = await response.json();

    return {
      headers: response.headers,
      status: response.status,
      statusText: response.statusText,
      data: responseData,
    };
  }
}
