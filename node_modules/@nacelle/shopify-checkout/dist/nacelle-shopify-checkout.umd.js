var M=Object.defineProperty;var A=Object.getOwnPropertySymbols;var W=Object.prototype.hasOwnProperty,X=Object.prototype.propertyIsEnumerable;var S=(a,h,f)=>h in a?M(a,h,{enumerable:!0,configurable:!0,writable:!0,value:f}):a[h]=f,I=(a,h)=>{for(var f in h||(h={}))W.call(h,f)&&S(a,f,h[f]);if(A)for(var f of A(h))X.call(h,f)&&S(a,f,h[f]);return a};var y=(a,h,f)=>new Promise((E,m)=>{var $=k=>{try{d(f.next(k))}catch(g){m(g)}},b=k=>{try{d(f.throw(k))}catch(g){m(g)}},d=k=>k.done?E(k.value):Promise.resolve(k.value).then($,b);d((f=f.apply(a,h)).next())});(function(a,h){typeof exports=="object"&&typeof module!="undefined"?module.exports=h():typeof define=="function"&&define.amd?define(h):(a=typeof globalThis!="undefined"?globalThis:a||self,a.NacelleShopifyCheckout=h())})(this,function(){"use strict";function a({id:e,webUrl:o}){return{id:e,url:o,completed:!1}}function h({cartItems:e}){return e.map(r=>{const{quantity:t,variantId:l}=r,p=v(l);return{customAttributes:g({metafields:r.metafields}),quantity:t,variantId:p}})}function f(e){var r,t;return((t=(r=e==null?void 0:e.split(".myshopify").shift())==null?void 0:r.split("//").pop())==null?void 0:t.split(".").pop())||e}const E="[@nacelle/shopify-checkout] in order to create a checkout server-side, you must provide a fetch API-compatible `fetchClient` capable of running on both the client & server. Examples include `isomorphic-unfetch` and `cross-fetch`.",m="[@nacelle/shopify-checkout]: missing required parameters. Either use both `myshopifyDomain` and `storefrontApiVersion`, or provide a `customEndpoint`.";function $({customEndpoint:e,fetchClient:o,myshopifyDomain:r,storefrontApiVersion:t,storefrontCheckoutToken:l}){return({query:u,variables:n})=>{let c=e;if(!c){if(!r||!t)throw new Error(m);c=`https://${f(r||"")}.myshopify.com/api/${t}/graphql`}let i=o;if(!i)if(typeof window!="undefined")i=window.fetch;else throw new Error(E);return i(c,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json","X-Shopify-Storefront-Access-Token":l},body:JSON.stringify({query:u,variables:n})}).then(s=>s.json())}}function b(e,...o){return e.reduce((r,t,l)=>`${r}${t}${o[l]||""}`,"")}function d(e,{caller:o,message:r}={}){let t="";throw o&&(t=`[${o}] `),t=t+(r||"Shopify Storefront API Errors:")+(e?`
`+JSON.stringify(e,null,2):""),new Error(t)}function k(e){return(e==null?void 0:e.length)?e.includes("Z2lkOi8vc2hvcGlmeS9DaGVja291dC8")&&e!=="":!1}function g({metafields:e}){return!Array.isArray(e)||!(e==null?void 0:e.length)?[]:e==null?void 0:e.reduce((r,t)=>(typeof t.value=="string"?r.push({key:t.key,value:t.value}):console.warn(`Omitting custom attribute "${t.key}" because it has a non-string value.`),r),[])}function v(e){if(U(e))return e;if(V(e))return L(e);const o=q(e);if(U(o))return o;throw Error(`${e} is an invalid shopify variant id`)}function U(e){return e.startsWith("gid://shopify/")}function V(e){return!Number.isNaN(Number(e))}function q(e){try{return typeof window=="undefined"?Buffer.from(e,"base64").toString("base64")===e?Buffer.from(e,"base64").toString():e:window.atob(e)}catch(o){return e}}function L(e){return`gid://shopify/ProductVariant/${e}`}const T=b`mutation checkoutCreate($input: CheckoutCreateInput!) { checkoutCreate(input: $input) { checkout { id webUrl } checkoutUserErrors { code field message } } }`,D=b`mutation checkoutLineItemsReplace( $lineItems: [CheckoutLineItemInput!]! $checkoutId: ID! ) { checkoutLineItemsReplace(lineItems: $lineItems, checkoutId: $checkoutId) { checkout { id webUrl } userErrors { code field message } } }`,R=b`mutation checkoutAttributesUpdate( $checkoutId: ID! $input: CheckoutAttributesUpdateV2Input! ) { checkoutAttributesUpdateV2(checkoutId: $checkoutId, input: $input) { checkout { id webUrl } checkoutUserErrors { code field message } } }`;function N(l){return y(this,arguments,function*({gqlClient:e,id:o,customAttributes:r,note:t}){const p=R,u={checkoutId:o,input:{customAttributes:r,note:t}},{data:n,errors:c}=yield e({query:p,variables:u}).catch(s=>{throw new Error(s)}),i=c||(n==null?void 0:n.checkoutAttributesUpdateV2.checkoutUserErrors);if((i==null?void 0:i.length)&&d(i,{caller:"checkoutAttributesUpdate"}),n==null?void 0:n.checkoutAttributesUpdateV2.checkout)return a(n.checkoutAttributesUpdateV2.checkout)})}function P(p){return y(this,arguments,function*({gqlClient:e,lineItems:o,customAttributes:r,note:t,queueToken:l}){const u=T,n={input:{customAttributes:r,lineItems:o,note:t},queueToken:l};try{const{data:c,errors:i}=yield e({query:u,variables:n}).catch(C=>{throw new Error(C)}),s=i||(c==null?void 0:c.checkoutCreate.checkoutUserErrors);if((s==null?void 0:s.length)&&d(i,{caller:"checkoutCreate"}),c==null?void 0:c.checkoutCreate.checkout)return a(c.checkoutCreate.checkout)}catch(c){throw new Error(String(c))}})}function G(t){return y(this,arguments,function*({gqlClient:e,lineItems:o,id:r}){const l=D,p={checkoutId:r,lineItems:o},{data:u,errors:n}=yield e({query:l,variables:p}).catch(i=>{throw new Error(i)}),c=n||(u==null?void 0:u.checkoutLineItemsReplace.userErrors);if((c==null?void 0:c.length)&&d(c,{caller:"checkoutLineItemsReplace"}),u==null?void 0:u.checkoutLineItemsReplace.checkout)return a(u.checkoutLineItemsReplace.checkout)})}const j=b`query getCheckout($id: ID!) { node(id: $id) { ... on Checkout { id webUrl completedAt } } }`;function x(r){return y(this,arguments,function*({gqlClient:e,id:o}){const t=j,l={id:o},{data:p,errors:u}=yield e({query:t,variables:l}).catch(n=>{throw new Error(n)});if(u&&d(u,{caller:"findCheckout"}),!(p==null?void 0:p.node))d(void 0,{caller:"findCheckout",message:"Checkout response has no data"});else{const{id:n,webUrl:c,completedAt:i}=p.node;return{completed:Boolean(i),id:n||"",url:c||""}}})}function B(u){return y(this,arguments,function*({gqlClient:e,id:o,lineItems:r,customAttributes:t,note:l,queueToken:p}){let n;const c=r==null?void 0:r.length,i=(t==null?void 0:t.length)||l;try{if(o){if(!k(o))throw new Error(`Invalid checkout ID. Expected a Base64-encoded Shopify Global ID. Received: ${o}`);const s=[];c&&s.push(G({gqlClient:e,id:o,lineItems:r})),i&&s.push(N({gqlClient:e,id:o,customAttributes:t,note:l})),yield Promise.allSettled(s).then(C=>C.forEach(w=>{if(w.status==="fulfilled"&&w.value)n=I(I({},n||{}),w.value);else if(w.status==="rejected")throw new Error(w.reason)}))}return typeof n=="undefined"&&typeof r!="undefined"&&(n=yield P({gqlClient:e,customAttributes:t,note:l,lineItems:r,queueToken:p})),n}catch(s){throw new Error(String(s))}})}function O({storefrontCheckoutToken:e,myshopifyDomain:o,storefrontApiVersion:r,customEndpoint:t,fetchClient:l}){const p=$({customEndpoint:t,fetchClient:l,myshopifyDomain:o,storefrontApiVersion:r,storefrontCheckoutToken:e});function u(i){return y(this,arguments,function*({id:c}){return yield x({gqlClient:p,id:c})})}function n(F){return y(this,arguments,function*({cartItems:c,id:i,metafields:s,note:C,queueToken:w}){const z=(c==null?void 0:c.length)?h({cartItems:c}):void 0,J=(s==null?void 0:s.length)?g({metafields:s}):void 0;return yield B({gqlClient:p,lineItems:z,id:i,customAttributes:J,note:C,queueToken:w})})}return{get:u,process:n}}return O});
//# sourceMappingURL=nacelle-shopify-checkout.umd.js.map
